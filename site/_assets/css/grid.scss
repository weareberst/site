grid,
.grid {
  display: grid;
  grid-column-gap: $grid-gutter-three-col;
  grid-template-columns: repeat(3, 1fr);
  --grid-cs: 1; /* column start */
  --grid-ce: -1; /* column end */
}

grid > cell,
.grid > * {
  display: block;
  appearance: none;
  -webkit-appearance: none;
}

.grid > * {
  grid-column-start: 1;
  grid-column-end: -1;
}

/* span=start... */
grid > cell[span^='1'] {
  --grid-cs: 1;
}
grid > cell[span^='2'] {
  --grid-cs: 2;
}
grid > cell[span^='3'] {
  --grid-cs: 3;
}
grid > cell[span^='4'] {
  --grid-cs: 4;
}
grid > cell[span^='5'] {
  --grid-cs: 5;
}
grid > cell[span^='6'] {
  --grid-cs: 6;
}
grid > cell[span^='7'] {
  --grid-cs: 7;
}
grid > cell[span^='8'] {
  --grid-cs: 8;
}

/* span=...+width, span=...-end */
grid > cell[span$='+1'],
grid > cell[span='1'] {
  --grid-ce: 1;
}
grid > cell[span$='+2'],
grid > cell[span$='-1'],
grid > cell[span='2'] {
  --grid-ce: 2;
}
grid > cell[span$='+3'],
grid > cell[span$='-2'],
grid > cell[span='3'] {
  --grid-ce: 3;
}
grid > cell[span$='+4'],
grid > cell[span$='-3'],
grid > cell[span='4'] {
  --grid-ce: 4;
}
grid > cell[span$='+5'],
grid > cell[span$='-4'],
grid > cell[span='5'] {
  --grid-ce: 5;
}
grid > cell[span$='+6'],
grid > cell[span$='-5'],
grid > cell[span='6'] {
  --grid-ce: 6;
}
grid > cell[span$='+7'],
grid > cell[span$='-6'],
grid > cell[span='7'] {
  --grid-ce: 7;
}
grid > cell[span$='+8'],
grid > cell[span$='-7'],
grid > cell[span='8'] {
  --grid-ce: 8;
}
grid > cell[span$='-8'] {
  --grid-ce: 9;
}

/* connect vars */

grid > cell[span] {
  grid-column-end: span var(--grid-ce);
}
grid > cell[span*='+'],
grid > cell[span*='-'],
grid > cell[span*='..'] {
  grid-column-start: var(--grid-cs);
}
grid > cell[span*='-'],
grid > cell[span*='..'] {
  grid-column-end: var(--grid-ce);
}
grid > cell:not([span]),
grid > cell[span='row'] {
  grid-column: 1 / -1;
}

@media only screen and (min-width: #{$breakpoint-medium}) {
  /* span-m=start... */
  grid > cell[span-m^='1'] {
    --grid-cs: 1;
  }
  grid > cell[span-m^='2'] {
    --grid-cs: 2;
  }
  grid > cell[span-m^='3'] {
    --grid-cs: 3;
  }

  /* span-m=...+width, span-m=...-end */
  grid > cell[span-m$='+1'],
  grid > cell[span-m='1'] {
    --grid-ce: 1;
  }
  grid > cell[span-m$='+2'],
  grid > cell[span-m$='-1'],
  grid > cell[span-m='2'] {
    --grid-ce: 2;
  }
  grid > cell[span-m$='+3'],
  grid > cell[span-m$='-2'],
  grid > cell[span-m='3'] {
    --grid-ce: 3;
  }
  grid > cell[span-m$='-3'] {
    --grid-ce: 4;
  }
  // grid > cell[span-m$='+4'],
  // grid > cell[span-m$='-3'],
  // grid > cell[span-m='4'] {
  //   --grid-ce: 4;
  // }

  /* connect vars */
  grid > cell[span-m] {
    grid-column-end: span var(--grid-ce);
  }
  grid > cell[span-m*='+'],
  grid > cell[span-m*='-'],
  grid > cell[span-m*='..'] {
    grid-column-start: var(--grid-cs);
  }
  grid > cell[span-m*='-'],
  grid > cell[span-m*='..'] {
    grid-column-end: var(--grid-ce);
  }
  grid > cell[span-m$='..'] {
    grid-column-end: -1;
  }
  grid > cell[span-m='row'] {
    grid-column: 1 / -1;
  }
}

@media only screen and (min-width: #{$breakpoint-large}) {
  grid,
  .grid {
    grid-column-gap: $grid-gutter-six-col;
    grid-template-columns: repeat(6, 1fr);
  }

  /* span-l=start... */
  grid > cell[span-l^='1'] {
    --grid-cs: 1;
  }
  grid > cell[span-l^='2'] {
    --grid-cs: 2;
  }
  grid > cell[span-l^='3'] {
    --grid-cs: 3;
  }
  grid > cell[span-l^='4'] {
    --grid-cs: 4;
  }
  grid > cell[span-l^='5'] {
    --grid-cs: 5;
  }
  grid > cell[span-l^='6'] {
    --grid-cs: 6;
  }

  /* span-l=...+width, span-l=...-end */
  grid > cell[span-l$='+1'],
  grid > cell[span-l='1'] {
    --grid-ce: 1;
  }
  grid > cell[span-l$='+2'],
  grid > cell[span-l$='-1'],
  grid > cell[span-l='2'] {
    --grid-ce: 2;
  }
  grid > cell[span-l$='+3'],
  grid > cell[span-l$='-2'],
  grid > cell[span-l='3'] {
    --grid-ce: 3;
  }
  grid > cell[span-l$='+4'],
  grid > cell[span-l$='-3'],
  grid > cell[span-l='4'] {
    --grid-ce: 4;
  }
  grid > cell[span-l$='+5'],
  grid > cell[span-l$='-4'],
  grid > cell[span-l='5'] {
    --grid-ce: 5;
  }
  grid > cell[span-l$='+6'],
  grid > cell[span-l$='-5'],
  grid > cell[span-l='6'] {
    --grid-ce: 6;
  }
  grid > cell[span-l$='-6'] {
    --grid-ce: 7;
  }

  /* connect vars */
  grid > cell[span-l] {
    grid-column-end: span var(--grid-ce);
  }
  grid > cell[span-l*='+'],
  grid > cell[span-l*='-'],
  grid > cell[span-l*='..'] {
    grid-column-start: var(--grid-cs);
  }
  grid > cell[span-l*='-'],
  grid > cell[span-l*='..'] {
    grid-column-end: var(--grid-ce);
  }
  grid > cell[span-l$='..'] {
    grid-column-end: -1;
  }
  grid > cell[span-l='row'] {
    grid-column: 1 / -1;
  }
}

@media only screen and (min-width: #{$breakpoint-xlarge}) {
  grid,
  .grid {
    grid-column-gap: $grid-gutter-eight-col;
    grid-template-columns: repeat(8, 1fr);
  }

  /* span-xl=start... */
  grid > cell[span-xl^='1'] {
    --grid-cs: 1;
  }
  grid > cell[span-xl^='2'] {
    --grid-cs: 2;
  }
  grid > cell[span-xl^='3'] {
    --grid-cs: 3;
  }
  grid > cell[span-xl^='4'] {
    --grid-cs: 4;
  }
  grid > cell[span-xl^='5'] {
    --grid-cs: 5;
  }
  grid > cell[span-xl^='6'] {
    --grid-cs: 6;
  }
  grid > cell[span-xl^='7'] {
    --grid-cs: 7;
  }
  grid > cell[span-xl^='8'] {
    --grid-cs: 8;
  }

  /* span-xl=...+width, span-xl=...-end */
  grid > cell[span-xl$='+1'],
  grid > cell[span-xl='1'] {
    --grid-ce: 1;
  }
  grid > cell[span-xl$='+2'],
  grid > cell[span-xl$='-1'],
  grid > cell[span-xl='2'] {
    --grid-ce: 2;
  }
  grid > cell[span-xl$='+3'],
  grid > cell[span-xl$='-2'],
  grid > cell[span-xl='3'] {
    --grid-ce: 3;
  }
  grid > cell[span-xl$='+4'],
  grid > cell[span-xl$='-3'],
  grid > cell[span-xl='4'] {
    --grid-ce: 4;
  }
  grid > cell[span-xl$='+5'],
  grid > cell[span-xl$='-4'],
  grid > cell[span-xl='5'] {
    --grid-ce: 5;
  }
  grid > cell[span-xl$='+6'],
  grid > cell[span-xl$='-5'],
  grid > cell[span-xl='6'] {
    --grid-ce: 6;
  }
  grid > cell[span-xl$='+7'],
  grid > cell[span-xl$='-6'],
  grid > cell[span-xl='7'] {
    --grid-ce: 7;
  }
  grid > cell[span-xl$='+8'],
  grid > cell[span-xl$='-7'],
  grid > cell[span-xl='8'] {
    --grid-ce: 8;
  }
  grid > cell[span-xl$='-8'] {
    --grid-ce: 9;
  }

  /* connect vars */
  grid > cell[span-xl] {
    grid-column-end: span var(--grid-ce);
  }
  grid > cell[span-xl*='+'],
  grid > cell[span-xl*='-'],
  grid > cell[span-xl*='..'] {
    grid-column-start: var(--grid-cs);
  }
  grid > cell[span-xl*='-'],
  grid > cell[span-xl*='..'] {
    grid-column-end: var(--grid-ce);
  }
  grid > cell[span-xl$='..'] {
    grid-column-end: -1;
  }
  grid > cell[span-xl='row'] {
    grid-column: 1 / -1;
  }
}

@mixin span($start, $end, $bp: false) {
  @if $bp {
    @media only screen and (min-width: #{map-get($breakpoints, $bp) - 1px}) {
      grid-column-start: $start;
      grid-column-end: $end;
    }
  } @else if $bp == false or $bp == small {
    grid-column-start: $start;
    grid-column-end: $end;
  }
}

@mixin grid() {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-column-gap: $grid-gutter-three-col;

  @media only screen and (min-width: #{$breakpoint-large}) {
    grid-template-columns: repeat(6, 1fr);
    grid-column-gap: $grid-gutter-six-col;
  }

  @media only screen and (min-width: #{$breakpoint-xlarge}) {
    grid-template-columns: repeat(8, 1fr);
    grid-column-gap: $grid-gutter-eight-col;
  }
}
